import{I as g}from"./InstallationStep.916efcd3.js";import{_ as I,L as _,m as y,S as m,I as P,a as D,b as v,r as f,o as a,c as r,d as h,w as C,F as K,e as n,n as p,f as c,g as d}from"./index.2e5144e1.js";const S="/assets/docker-logo.6e4c23dd.png",w="/assets/kubernetes-logo.405d83f6.png",R=[{title:"Platform",active:!0},{title:"Environment",active:!1},{title:"Variables",active:!1},{title:"Install",active:!1}],L="Select the platform you want to use for the installation. <br><br>If you want to use Docker, make sure it is installed and running.<br>If you want to use Kubernetes, make sure it is installed and properly configured.<br><br>If the installer doesn't find the platform you want to use, but you have it installed, you can specify the path to the platform's executable.",N={components:{InstallationStep:g,LoadingSpinner:_},data(){return{steps:R,tips:L,isDockerInstalled:null,isDockerRunning:null,isKubernetesInstalled:null,isChecking:!1}},computed:{...y({selectedPlatform:e=>e.installationState.platform}),navigation(){return{next:{path:"/environment-setup",disabled:!this.selectedPlatform},back:{path:"/",disabled:!1},cancel:{path:"/",disabled:!1}}}},methods:{selectPlatform(e){(e==="docker"&&this.isDockerInstalled||e==="kubernetes"&&this.isKubernetesInstalled)&&this.$store.commit("setPlatform",e)},specifyKubernetesPath(){m("kubernetes").then(e=>{e!==""&&this.getInstalledPlatforms()}).catch(e=>{this.isKubernetesInstalled=!1})},specifyDockerPath(){m("docker").then(e=>{e!==""&&this.getInstalledPlatforms()}).catch(e=>{this.isDockerInstalled=!1})},getInstalledPlatforms(){this.isChecking=!0;const e=P().then(i=>{this.isDockerInstalled=i}),s=D().then(i=>{this.isDockerRunning=i}),u=v().then(i=>{this.isKubernetesInstalled=i});Promise.all([e,s,u]).then(()=>{this.isDockerInstalled&&!this.isKubernetesInstalled?this.selectPlatform("docker"):!this.isDockerInstalled&&this.isKubernetesInstalled&&this.selectPlatform("kubernetes"),setTimeout(()=>{this.isChecking=!1},1e3)})}},beforeCreate(){this.$store.commit("resetEditingEnvironment")},created(){this.getInstalledPlatforms()}},V={class:"platform-main-content-container"},x=n("h1",{class:"platform-title"},"Choose a platform",-1),E={class:"platform-main-content"},B={class:"platform-main-content-buttons-container"},F=["disabled"],T=n("img",{src:S,alt:"Docker logo",class:"platform-button-image"},null,-1),z=[T],A=["disabled"],j=n("img",{src:w,alt:"Kubernetes logo",class:"platform-button-image"},null,-1),q=[j],G={class:"platform-main-content-warnings-container"},H={key:0,class:"platform-warning-message"},J={key:1,class:"platform-warning-message"},M={key:2,class:"platform-warning-message"};function O(e,s,u,i,t,l){const k=f("LoadingSpinner"),b=f("InstallationStep");return a(),r(K,null,[h(k,{isLoading:t.isChecking,text:"Checking for installed platforms..."},null,8,["isLoading"]),h(b,{steps:t.steps,tips:t.tips,navigation:l.navigation},{default:C(()=>[n("div",V,[x,n("div",E,[n("div",B,[n("button",{class:p(["platform-button",{"grayed-out":e.selectedPlatform&&e.selectedPlatform!=="docker"||!t.isDockerInstalled||!t.isDockerRunning}]),title:"Docker",onClick:s[0]||(s[0]=o=>l.selectPlatform("docker")),disabled:!t.isDockerInstalled||!t.isDockerRunning},z,10,F),n("button",{class:p(["platform-button",{"grayed-out":e.selectedPlatform&&e.selectedPlatform!=="kubernetes"||!t.isKubernetesInstalled}]),title:"Kubernetes",onClick:s[1]||(s[1]=o=>l.selectPlatform("kubernetes")),disabled:!t.isKubernetesInstalled},q,10,A)]),n("div",G,[!t.isDockerInstalled&&t.isDockerInstalled!=null?(a(),r("p",H,[c(" No valid Docker installation found in your system "),n("button",{class:"primary-button",onClick:s[2]||(s[2]=(...o)=>l.specifyDockerPath&&l.specifyDockerPath(...o))},"Specify path")])):d("",!0),!t.isDockerRunning&&t.isDockerRunning!=null&&t.isDockerInstalled?(a(),r("p",J,[c(" A valid Docker installation was found, but it's not running. Please start it and try again. "),n("button",{class:"primary-button",onClick:s[3]||(s[3]=(...o)=>l.getInstalledPlatforms&&l.getInstalledPlatforms(...o))},"Check again")])):d("",!0),!t.isKubernetesInstalled&&t.isKubernetesInstalled!=null?(a(),r("p",M,[c(" No valid Kubernetes installation found in your system: "),n("button",{class:"primary-button",onClick:s[4]||(s[4]=(...o)=>l.specifyKubernetesPath&&l.specifyKubernetesPath(...o))},"Specify path")])):d("",!0)])])])]),_:1},8,["steps","tips","navigation"])],64)}const W=I(N,[["render",O]]);export{W as default};
